package searcher

import (
	"io/fs"
	"reflect"
	"testing"
	"testing/fstest"
)

func TestSearcher_Search(t *testing.T) {
	type fields struct {
		FS          fs.FS
		Directory   string
		WorkerCount int
	}
	type args struct {
		word string
	}
	tests := []struct {
		name      string
		fields    fields
		args      args
		wantFiles []string
		wantErr   bool
	}{
		{
			name: "Ok",
			fields: fields{
				FS: fstest.MapFS{
					"file1.txt": {Data: []byte("World")},
					"file2.txt": {Data: []byte("World1")},
					"file3.txt": {Data: []byte("Hello World")},
				},
				WorkerCount: 1,
			},
			args:      args{word: "World"},
			wantFiles: []string{"file1", "file3"},
			wantErr:   false,
		},
		{
			name: "Ok - кириллица - начало строки",
			fields: fields{
				FS: fstest.MapFS{
					"file1.txt": {Data: []byte(`Хороши летние туманные дни. В такие дни нельзя стрелять. Птица, вылетев у вас из-под ног, тотчас исчезает в беловатой мгле неподвиж­ного тумана. Кругом невыразимо тихо. Всё проснулось и, несмотря на это, всё молчит. Дерево не шелохнётся. Сквозь тонкий пар, разлитый в воздухе, чернеется перед вами длинная полоса. Лес постепенно пре­вращается в высокую грудку полыни. Всюду туман. В продолжение некоторого времени тишина. Но вот ветер слегка шевельнётся, и кло­чок бледно-голубого неба смутно выступит сквозь редеющий пар. Золотисто-жёлтый луч ворвётся вдруг, заструится длинным потоком, и опять всё заволоклось. Долго продолжается эта борьба, но как велико­лепен и ясен впоследствии становится день, когда свет восторжествует. Последние волны согретого тумана расстилаются в виде скатертей, из­виваются и исчезают в голубой сияющей вышине.`)},
					"file2.txt": {Data: []byte(`Прачка Палашка, толстая и рябая девка, и кривая коровница Акулька как-то согласились в одно время кинуться матушке в ноги, винясь в преступной слабости и с плачем жалуясь на мусье, обольстившего их неопытность. Матушка шутить этим не любила и пожаловалась батюшке. У него расправа была коротка. Он тотчас потребовал каналью француза. Доложили, что мусье давал мне свой урок. Батюшка пошел в мою комнату. В это время Бопре спал на кровати сном невинности. Я был занят делом. Надобно знать, что для меня выписана была из Москвы географическая карта. Она висела на стене безо всякого употребления и давно соблазняла меня шириною и добротою бумаги. Я решился сделать из нее змей и, пользуясь сном Бопре, принялся за работу. Батюшка вошел в то самое время, как я прилаживал мочальный хвост к Мысу Доброй Надежды. Увидя мои упражнения в географии, батюшка дернул меня за ухо, потом подбежал к Бопре, разбудил его очень неосторожно и стал осыпать укоризнами. Бопре в смятении хотел было привстать и не мог: несчастный француз был мертво пьян. Семь бед, один ответ. Батюшка за ворот приподнял его с кровати, вытолкал из дверей и в тот же день прогнал со двора, к неописанной радости Савельича. Тем и кончилось мое воспитание.`)},
					"file3.txt": {Data: []byte(`- Дети, - молвил он им, - я иду в горы, хочу с другими смельчаками
поохотиться на поганого пса Алибека (так звали разбойника-турка,
разорявшего последнее время весь тот край). Ждите меня десять дней, а коли
на десятый день не вернусь, закажите вы обедню за упокой моей души -
значит, убили меня. Но ежели, - прибавил тут старый Горча, приняв вид самый
строгий, - ежели (да не попустит этого бог) я вернусь поздней, ради вашего
спасения, не впускайте вы меня в дом. Ежели будет так, приказываю вам -
забудьте, что я вам был отец, и вбейте мне осиновый кол в спину, что бы я
ни говорил, что бы ни делал, - значит, я теперь проклятый вурдалак и пришел
сосать вашу кровь. `)},
				},
				WorkerCount: 1,
			},
			args:      args{word: "Хороши"},
			wantFiles: []string{"file1"},
			wantErr:   false,
		},
		{
			name: "Ok - кириллица - конец строки",
			fields: fields{
				FS: fstest.MapFS{
					"file1.txt": {Data: []byte(`Хороши летние туманные дни. В такие дни нельзя стрелять. Птица, вылетев у вас из-под ног, тотчас исчезает в беловатой мгле неподвиж­ного тумана. Кругом невыразимо тихо. Всё проснулось и, несмотря на это, всё молчит. Дерево не шелохнётся. Сквозь тонкий пар, разлитый в воздухе, чернеется перед вами длинная полоса. Лес постепенно пре­вращается в высокую грудку полыни. Всюду туман. В продолжение некоторого времени тишина. Но вот ветер слегка шевельнётся, и кло­чок бледно-голубого неба смутно выступит сквозь редеющий пар. Золотисто-жёлтый луч ворвётся вдруг, заструится длинным потоком, и опять всё заволоклось. Долго продолжается эта борьба, но как велико­лепен и ясен впоследствии становится день, когда свет восторжествует. Последние волны согретого тумана расстилаются в виде скатертей, из­виваются и исчезают в голубой сияющей вышине.`)},
					"file2.txt": {Data: []byte(`Прачка Палашка, толстая и рябая девка, и кривая коровница Акулька как-то согласились в одно время кинуться матушке в ноги, винясь в преступной слабости и с плачем жалуясь на мусье, обольстившего их неопытность. Матушка шутить этим не любила и пожаловалась батюшке. У него расправа была коротка. Он тотчас потребовал каналью француза. Доложили, что мусье давал мне свой урок. Батюшка пошел в мою комнату. В это время Бопре спал на кровати сном невинности. Я был занят делом. Надобно знать, что для меня выписана была из Москвы географическая карта. Она висела на стене безо всякого употребления и давно соблазняла меня шириною и добротою бумаги. Я решился сделать из нее змей и, пользуясь сном Бопре, принялся за работу. Батюшка вошел в то самое время, как я прилаживал мочальный хвост к Мысу Доброй Надежды. Увидя мои упражнения в географии, батюшка дернул меня за ухо, потом подбежал к Бопре, разбудил его очень неосторожно и стал осыпать укоризнами. Бопре в смятении хотел было привстать и не мог: несчастный француз был мертво пьян. Семь бед, один ответ. Батюшка за ворот приподнял его с кровати, вытолкал из дверей и в тот же день прогнал со двора, к неописанной радости Савельича. Тем и кончилось мое воспитание.`)},
					"file3.txt": {Data: []byte(`- Дети, - молвил он им, - я иду в горы, хочу с другими смельчаками
поохотиться на поганого пса Алибека (так звали разбойника-турка,
разорявшего последнее время весь тот край). Ждите меня десять дней, а коли
на десятый день не вернусь, закажите вы обедню за упокой моей души -
значит, убили меня. Но ежели, - прибавил тут старый Горча, приняв вид самый
строгий, - ежели (да не попустит этого бог) я вернусь поздней, ради вашего
спасения, не впускайте вы меня в дом. Ежели будет так, приказываю вам -
забудьте, что я вам был отец, и вбейте мне осиновый кол в спину, что бы я
ни говорил, что бы ни делал, - значит, я теперь проклятый вурдалак и пришел
сосать вашу кровь. `)},
				},
				WorkerCount: 1,
			},
			args:      args{word: "вышине"},
			wantFiles: []string{"file1"},
			wantErr:   false,
		},
		{
			name: "Ok - кириллица - конец строки",
			fields: fields{
				FS: fstest.MapFS{
					"file1.txt": {Data: []byte(`Хороши летние туманные дни. В такие дни нельзя стрелять. Птица, вылетев у вас из-под ног, тотчас исчезает в беловатой мгле неподвиж­ного тумана. Кругом невыразимо тихо. Всё проснулось и, несмотря на это, всё молчит. Дерево не шелохнётся. Сквозь тонкий пар, разлитый в воздухе, чернеется перед вами длинная полоса. Лес постепенно пре­вращается в высокую грудку полыни. Всюду туман. В продолжение некоторого времени тишина. Но вот ветер слегка шевельнётся, и кло­чок бледно-голубого неба смутно выступит сквозь редеющий пар. Золотисто-жёлтый луч ворвётся вдруг, заструится длинным потоком, и опять всё заволоклось. Долго продолжается эта борьба, но как велико­лепен и ясен впоследствии становится день, когда свет восторжествует. Последние волны согретого тумана расстилаются в виде скатертей, из­виваются и исчезают в голубой сияющей вышине.`)},
					"file2.txt": {Data: []byte(`Прачка Палашка, толстая и рябая девка, и кривая коровница Акулька как-то согласились в одно время кинуться матушке в ноги, винясь в преступной слабости и с плачем жалуясь на мусье, обольстившего их неопытность. Матушка шутить этим не любила и пожаловалась батюшке. У него расправа была коротка. Он тотчас потребовал каналью француза. Доложили, что мусье давал мне свой урок. Батюшка пошел в мою комнату. В это время Бопре спал на кровати сном невинности. Я был занят делом. Надобно знать, что для меня выписана была из Москвы географическая карта. Она висела на стене безо всякого употребления и давно соблазняла меня шириною и добротою бумаги. Я решился сделать из нее змей и, пользуясь сном Бопре, принялся за работу. Батюшка вошел в то самое время, как я прилаживал мочальный хвост к Мысу Доброй Надежды. Увидя мои упражнения в географии, батюшка дернул меня за ухо, потом подбежал к Бопре, разбудил его очень неосторожно и стал осыпать укоризнами. Бопре в смятении хотел было привстать и не мог: несчастный француз был мертво пьян. Семь бед, один ответ. Батюшка за ворот приподнял его с кровати, вытолкал из дверей и в тот же день прогнал со двора, к неописанной радости Савельича. Тем и кончилось мое воспитание.`)},
					"file3.txt": {Data: []byte(`- Дети, - молвил он им, - я иду в горы, хочу с другими смельчаками
поохотиться на поганого пса Алибека (так звали разбойника-турка,
разорявшего последнее время весь тот край). Ждите меня десять дней, а коли
на десятый день не вернусь, закажите вы обедню за упокой моей души -
значит, убили меня. Но ежели, - прибавил тут старый Горча, приняв вид самый
строгий, - ежели (да не попустит этого бог) я вернусь поздней, ради вашего
спасения, не впускайте вы меня в дом. Ежели будет так, приказываю вам -
забудьте, что я вам был отец, и вбейте мне осиновый кол в спину, что бы я
ни говорил, что бы ни делал, - значит, я теперь проклятый вурдалак и пришел
сосать вашу кровь. `)},
				},
				WorkerCount: 1,
			},
			args:      args{word: "бог"},
			wantFiles: []string{"file3"},
			wantErr:   false,
		},
		{
			name: "Ok - кириллица - скобки",
			fields: fields{
				FS: fstest.MapFS{
					"file1.txt": {Data: []byte("(бог)")},
				},
				WorkerCount: 1,
			},
			args:      args{word: "бог"},
			wantFiles: []string{"file1"},
			wantErr:   false,
		},
		{
			name: "Ок - кириллица - из-под",
			fields: fields{
				FS: fstest.MapFS{
					"file1.txt": {Data: []byte("из-под")},
				},
				WorkerCount: 1,
			},
			args:      args{word: "из-под"},
			wantFiles: []string{"file1"},
			wantErr:   false,
		},
		{
			name: "Not found",
			fields: fields{
				FS: fstest.MapFS{
					"file1.txt": {Data: []byte("World")},
					"file2.txt": {Data: []byte("World1")},
					"file3.txt": {Data: []byte("Hello World")},
				},
				WorkerCount: 1,
			},
			args:      args{word: "World2"},
			wantFiles: nil,
			wantErr:   false,
		},
		{
			name: "Error",
			fields: fields{
				FS: fstest.MapFS{
					"file1.txt": {Data: []byte("World")},
					"file2.txt": {Data: []byte("World1")},
					"file3.txt": {Data: []byte("Hello World")},
				},
				Directory:   "notfound",
				WorkerCount: 1,
			},
			args:      args{word: "World"},
			wantFiles: nil,
			wantErr:   true,
		},
		{
			name: "Empty",
			fields: fields{
				FS:          fstest.MapFS{},
				WorkerCount: 1,
			},
			args:      args{word: "World"},
			wantFiles: nil,
			wantErr:   false,
		},
		{
			name: "Empty word",
			fields: fields{
				FS: fstest.MapFS{
					"file1.txt": {Data: []byte("World")},
					"file2.txt": {Data: []byte("World1")},
					"file3.txt": {Data: []byte("Hello World")},
				},
				WorkerCount: 1,
			},
			args:      args{word: ""},
			wantFiles: nil,
			wantErr:   true,
		},
		{
			name: "Empty files",
			fields: fields{
				FS: fstest.MapFS{
					"file1.txt": {Data: []byte("")},
					"file2.txt": {Data: []byte("")},
					"file3.txt": {Data: []byte("")},
				},
				WorkerCount: 1,
			},
			args:      args{word: "World"},
			wantFiles: nil,
			wantErr:   false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			s := &Searcher{
				FS:          tt.fields.FS,
				Directory:   tt.fields.Directory,
				WorkerCount: tt.fields.WorkerCount,
			}
			gotFiles, err := s.Search(tt.args.word)
			if (err != nil) != tt.wantErr {
				t.Errorf("Search() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
			if !reflect.DeepEqual(gotFiles, tt.wantFiles) {
				t.Errorf("Search() gotFiles = %v, want %v", gotFiles, tt.wantFiles)
			}
		})
	}
}
